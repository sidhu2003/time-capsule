name: Deploy Backend to AWS

on:
  # Trigger on pushes to main branch, but exclude frontend folder
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'frontend/**'
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
  
  # Allow manual deployment
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

# Prevent concurrent deployments
concurrency:
  group: deploy-backend-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'
  AWS_REGION: 'us-east-1'

jobs:
  # Job to run tests (if any exist in the future)
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # For future tests

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run Python tests
        run: |
          # Currently no tests, but placeholder for future
          echo "No tests configured yet"
          exit 0

      - name: Lint Python code (optional)
        run: |
          # Install and run basic linting
          pip install flake8
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        continue-on-error: true

  # Main deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'success' || needs.test.result == 'skipped')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          echo "AWS credentials configured successfully"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node.js dependencies
        run: npm ci

      - name: Determine deployment stage
        id: stage
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "stage=${{ github.event.inputs.stage }}" >> $GITHUB_OUTPUT
          else
            echo "stage=dev" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to AWS
        run: |
          echo "Deploying to stage: ${{ steps.stage.outputs.stage }}"
          npx serverless deploy --stage ${{ steps.stage.outputs.stage }} --verbose
        env:
          SLS_DEBUG: '*'